PRAGMA foreign_keys = OFF;

UPDATE PERSON SET IS_FROM_POOL='N' WHERE IS_FROM_POOL IS NULL;
UPDATE PERSON SET RANK_CODE='NONE' WHERE RANK_CODE IS NULL;

ALTER TABLE PERSON RENAME TO PERSON_OLD;
CREATE TABLE PERSON (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    FIRST_NAME VARCHAR(255) NOT NULL,
    LAST_NAME VARCHAR(255) NOT NULL,
    INITIALS VARCHAR(10),
    EMAIL VARCHAR(10) UNIQUE NOT NULL,
    PASSWORD VARCHAR(100),
    PWD_TOKEN VARCHAR(100),
    IS_ACTIVE VARCHAR(1) NOT NULL,    
    OFFICE_CODE VARCHAR(10) NOT NULL,
    ROLE_CODE VARCHAR(10) NOT NULL,
    RANK_CODE VARCHAR(10) NOT NULL,
    COMPANY VARCHAR(100),
    ACCOUNT VARCHAR(100),
    PHONE VARCHAR(20),
    POSITION VARCHAR(50),
    ADDRESS_STREET VARCHAR(100),
    ADDRESS_POST VARCHAR(100),
    PROJECT_FACTOR REAL,
    IS_FROM_POOL VARCHAR(1) DEFAULT 'N',
    AGREEMENT_CODE VARCHAR(10),
    SALARY INTEGER,
    SALARY_RATE INTEGER,
    LEAVE_RATE INTEGER,
    EXCEL_ID INTEGER,
    CREATED INTEGER,
    LAST_MOD INTEGER,
    MODIFIED_BY INTEGER
);

INSERT INTO PERSON (
	ID, FIRST_NAME, LAST_NAME, INITIALS, EMAIL, PASSWORD, PWD_TOKEN, IS_ACTIVE, OFFICE_CODE, ROLE_CODE, COMPANY, ACCOUNT, PHONE, POSITION, ADDRESS_STREET, ADDRESS_POST, PROJECT_FACTOR, RANK_CODE, AGREEMENT_CODE, IS_FROM_POOL, SALARY, SALARY_RATE, LEAVE_RATE )
SELECT ID, FIRST_NAME, LAST_NAME, INITIALS, EMAIL, PASSWORD, PWD_TOKEN, IS_ACTIVE, OFFICE_CODE, ROLE_CODE, COMPANY, ACCOUNT, PHONE, POSITION, ADDRESS_STREET, ADDRESS_POST, PROJECT_FACTOR, RANK_CODE, AGREEMENT_CODE, IS_FROM_POOL, SALARY, SALARY_RATE, LEAVE_RATE
FROM PERSON_OLD;

DROP TABLE PERSON_OLD;

PRAGMA foreign_keys = ON;

CREATE UNIQUE INDEX PERSON_EXCEL_ID on PERSON (EXCEL_ID);

CREATE TABLE PERSON_HIST (
    ID INTEGER,
    EXCEL_ID INTEGER,
    FIRST_NAME VARCHAR(255),
    LAST_NAME VARCHAR(255),
    INITIALS VARCHAR(10),
    EMAIL VARCHAR(10),
    IS_ACTIVE VARCHAR(1),    
    OFFICE_CODE VARCHAR(10),
    ROLE_CODE VARCHAR(10),
    COMPANY VARCHAR(100),
    ACCOUNT VARCHAR(100),
    PHONE VARCHAR(20),
    POSITION VARCHAR(50),
    ADDRESS_STREET VARCHAR(100),
    ADDRESS_POST VARCHAR(100),
    PROJECT_FACTOR REAL, 
    RANK_CODE VARCHAR (10), 
    AGREEMENT_CODE VARCHAR (10), 
    IS_FROM_POOL VARCHAR (1), 
    SALARY INTEGER, 
    SALARY_RATE INTEGER, 
    LEAVE_RATE INTEGER,
    CREATED INTEGER,
    LAST_MOD INTEGER,
    MODIFIED_BY INTEGER,
    HIST_CREATED INTEGER
);


DROP TRIGGER IF EXISTS LOG_PERSON;

CREATE TRIGGER LOG_PERSON BEFORE UPDATE ON PERSON
WHEN
    NEW.ID IS NOT NULL AND (OLD.EMAIL <> NEW.EMAIL OR OLD.IS_ACTIVE <> NEW.IS_ACTIVE OR OLD.OFFICE_CODE <> NEW.OFFICE_CODE OR OLD.ROLE_CODE <> NEW.ROLE_CODE OR OLD.RANK_CODE <> NEW.RANK_CODE OR OLD.COMPANY <> NEW.COMPANY OR OLD.ACCOUNT <> NEW.ACCOUNT OR OLD.PHONE <> NEW.PHONE OR OLD.POSITION <> NEW.POSITION OR OLD.ADDRESS_STREET <> NEW.ADDRESS_STREET OR OLD.ADDRESS_POST <> NEW.ADDRESS_POST OR OLD.PROJECT_FACTOR <> NEW.PROJECT_FACTOR OR OLD.IS_FROM_POOL <> NEW.IS_FROM_POOL OR OLD.AGREEMENT_CODE <> NEW.AGREEMENT_CODE OR OLD.SALARY <> NEW.SALARY OR OLD.SALARY_RATE <> NEW.SALARY_RATE OR OLD.LEAVE_RATE <> NEW.LEAVE_RATE OR OLD.EXCEL_ID <> NEW.EXCEL_ID  )
    
BEGIN
    INSERT INTO PERSON_HIST ( ID, EXCEL_ID, FIRST_NAME, LAST_NAME, INITIALS, EMAIL, IS_ACTIVE, OFFICE_CODE, ROLE_CODE, COMPANY, ACCOUNT, PHONE, POSITION, ADDRESS_STREET, ADDRESS_POST, PROJECT_FACTOR, RANK_CODE, AGREEMENT_CODE, IS_FROM_POOL, SALARY, SALARY_RATE, LEAVE_RATE, CREATED, LAST_MOD, MODIFIED_BY, HIST_CREATED )
    VALUES ( OLD.ID, OLD.EXCEL_ID, OLD.FIRST_NAME, OLD.LAST_NAME, OLD.INITIALS, OLD.EMAIL, OLD.IS_ACTIVE, OLD.OFFICE_CODE, OLD.ROLE_CODE, OLD.COMPANY, OLD.ACCOUNT, OLD.PHONE, OLD.POSITION, OLD.ADDRESS_STREET, OLD.ADDRESS_POST, OLD.PROJECT_FACTOR, OLD.RANK_CODE, OLD.AGREEMENT_CODE, OLD.IS_FROM_POOL, OLD.SALARY, OLD.SALARY_RATE, OLD.LEAVE_RATE, OLD.CREATED, OLD.LAST_MOD, OLD.MODIFIED_BY, STRFTIME('%s','NOW') );

    UPDATE PERSON
    SET LAST_MOD = STRFTIME('%s','NOW')
    WHERE ID = OLD.ID;
END;