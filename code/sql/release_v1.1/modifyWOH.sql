
ALTER TABLE WORK_ORDER_HIST RENAME TO WORK_ORDER_HIST_OLD;
CREATE TABLE WORK_ORDER_HIST (
    ID INTEGER,
    WORK_NO VARCHAR(200),
    STATUS_CODE VARCHAR(10),
    TYPE_CODE VARCHAR(10) NOT NULL,
    OFFICE_CODE VARCHAR(10),
    COMPLEXITY_CODE VARCHAR(10),
    COMPLEXITY INTEGER,
    DESCRIPTION VARCHAR(255),
    COMMENT VARCHAR(255),
    MD_CAPEX VARCHAR(255),
    PRICE INTEGER,
    PROTOCOL_NO VARCHAR(255),
    IS_FROM_POOL VARCHAR (1) DEFAULT 'Y',
    CREATED INTEGER,
    LAST_MOD INTEGER,
    HIST_CREATED INTEGER,
    MODIFIED_BY INTEGER,
    ITEM_ID INTEGER,
    VENTURE_ID INTEGER
);

DROP TRIGGER IF EXISTS LOG_WO;

CREATE TRIGGER LOG_WO BEFORE UPDATE ON WORK_ORDER
WHEN
    OLD.STATUS_CODE <> NEW.STATUS_CODE
BEGIN
    INSERT INTO WORK_ORDER_HIST ( ID, WORK_NO, STATUS_CODE, TYPE_CODE, OFFICE_CODE, COMMENT, MD_CAPEX, PROTOCOL_NO, IS_FROM_POOL, DESCRIPTION, COMPLEXITY_CODE, COMPLEXITY, PRICE, ITEM_ID, VENTURE_ID, MODIFIED_BY, CREATED, LAST_MOD, HIST_CREATED )
    VALUES ( OLD.ID, OLD.WORK_NO, OLD.STATUS_CODE, OLD.TYPE_CODE, OLD.OFFICE_CODE, OLD.COMMENT, OLD.MD_CAPEX, OLD.PROTOCOL_NO, OLD.IS_FROM_POOL, OLD.DESCRIPTION, OLD.COMPLEXITY_CODE, OLD.COMPLEXITY, OLD.PRICE, OLD.ITEM_ID, OLD.VENTURE_ID, OLD.MODIFIED_BY, OLD.CREATED, OLD.LAST_MOD, STRFTIME('%s','NOW') );

    UPDATE WORK_ORDER
    SET LAST_MOD = STRFTIME('%s','NOW')
    WHERE ID = OLD.ID;
END;


INSERT INTO WORK_ORDER_HIST (ID ,WORK_NO ,STATUS_CODE ,TYPE_CODE ,COMPLEXITY_CODE ,COMPLEXITY ,DESCRIPTION ,COMMENT ,MD_CAPEX ,PRICE ,LAST_MOD ,HIST_CREATED)
SELECT ID ,WORK_NO ,STATUS_CODE ,TYPE_CODE ,COMPLEXITY_CODE ,COMPLEXITY ,DESCRIPTION ,COMMENT ,MD_CAPEX ,PRICE ,LAST_MOD ,HIST_CREATE 
FROM WORK_ORDER_HIST_OLD;

DROP TABLE WORK_ORDER_HIST_OLD;



 


